name: Code Quality
on:
    pull_request:
        branches: [main]

jobs:
    quality-check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: Setup pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: "8.6.1"

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Type checking
              run: pnpm run type-check

            - name: Format checking
              run: pnpm run format:check

            - name: Lint checking
              run: pnpm run lint

            - name: Build client
              run: pnpm run build:client

            - name: Build server
              run: pnpm run build:server

            - name: Detect Storybook changes
              id: storybook-changes
              run: |
                  if git diff --name-only origin/main...HEAD | grep -E "(src/components|\.storybook)" > /dev/null; then
                      echo "changed=true" >> $GITHUB_OUTPUT
                  else
                      echo "changed=false" >> $GITHUB_OUTPUT
                  fi

            - name: Build Storybook
              if: steps.storybook-changes.outputs.changed == 'true'
              run: pnpm run build-storybook

            - name: Run visual tests
              if: steps.storybook-changes.outputs.changed == 'true'
              run: pnpm exec chromatic
              env:
                  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
